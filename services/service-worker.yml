AWSTemplateFormatVersion: '2010-09-09'
Description: Creates Task definition and Service with related resources

Parameters:

  DockerImage:
    Type: String
    Description: This provides the image that need to be deployed


  EnvironmentName:
    Type: String
    Description: Environment name - stage or prod
    AllowedValues:
      - prod
      - stage
      - lab
    ConstraintDescription: Specify either stage or prod


  # stack creation prerequisite:  First create a VPC stack - see README for more info
  NetworkStackName:
    Description: Active CloudFormation stack containing VPC resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"


Resources:

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: django-Service-Worker
      TaskDefinition: !Ref Task
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - Fn::ImportValue: !Sub ${NetworkStackName}-PrivateSubnet1ID
            - Fn::ImportValue: !Sub ${NetworkStackName}-PrivateSubnet2ID
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup

  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: Service-Worker
      Cpu: 1024
      Memory: 4096
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ServiceWebExecutionRoleArn
      TaskRoleArn: !ImportValue ServiceWebTaskRoleArn
      ContainerDefinitions:
        - Name: static
          Image: !Ref DockerImage
          Cpu: 1024
          Memory: 4096
          Command: ["/bin/bash", "/home/selfscore/django/start_celery_with_env.sh"]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'service-web'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'worker'
          Environment:
            - Name: ENV
              Value: !Ref EnvironmentName
            - Name: ENV_STATE
              Value: !Ref EnvironmentName
            - Name: BUILD_FOR_SLM
              Value: 'off'
